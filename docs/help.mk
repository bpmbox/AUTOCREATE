# ==============================================================================
# üöÄ AUTOCREATE Company AI CEO √ó Jobless CTO Integrated Command System
# ==============================================================================

.PHONY: help-new

help-new:
	@echo "=========================================================================="
	@echo "üöÄ AUTOCREATE Company AI CEO √ó Jobless CTO Integrated Command System"
	@echo "=========================================================================="
	@echo "Usage: make <command>"
	@echo ""
	@echo "üìã Basic Commands:"
	@echo "  help                    Show this help message"
	@echo "  install                 Install Poetry dependencies"
	@echo "  app                     Start FastAPI application (port 7860)"
	@echo "  dev                     Start in development mode (hot reload)"
	@echo "  debug                   Start in debug mode"
	@echo "  server                  Start ASGI uvicorn server directly"
	@echo "  stop-port               Stop processes on port 7860"
	@echo "  clean                   Clean temporary files and caches"
	@echo ""
	@echo "üåê Chrome Extension Commands (Windows):"
	@echo "  chrome-ext              Start AI CEO Chrome extension"
	@echo "  chrome-ext-test         Open test page + Supabase chat"
	@echo "  chrome-ext-status       Check extension status"
	@echo "  chrome-ext-debug        Show debug instructions"
	@echo "  chrome-ext-full-demo    Full demonstration"
	@echo "  chrome / test-chrome    Shortcut commands"
	@echo ""
	@echo "üñ•Ô∏è GUI & VNC Commands:"
	@echo "  gui                     Start AI GUI desktop (http://localhost:6080)"
	@echo "  gui-auto                GUI with auto browser launch"
	@echo "  gui-simple              Simple GUI environment (http://localhost:6081)"
	@echo "  gui-stop                Stop GUI environment"
	@echo "  gui-restart             Restart GUI environment"
	@echo "  gui-logs                Show GUI logs"
	@echo ""
	@echo "ü§ñ OCR & RPA Automation Commands:"
	@echo "  ocr-install             Install OCR analysis packages"
	@echo "  ocr-gradio              Start OCR Gradio"
	@echo "  ocr-rpa-demo            OCR RPA automation demo"
	@echo "  ocr-pipeline            OCR analysis pipeline test"
	@echo "  vnc-auto                VNC desktop automation demo"
	@echo ""
	@echo "üìö WIKI RAG System Commands:"
	@echo "  wiki-rag                Start WIKI RAG system (http://localhost:7860)"
	@echo "  wiki-rag-install        Install WIKI RAG dependencies"
	@echo "  wiki-rag-build          Build WIKI RAG knowledge base"
	@echo "  wiki-rag-cli            Show WIKI RAG CLI usage"
	@echo "  wiki-rag-lite           Start WIKI RAG Lite"
	@echo ""
	@echo "üîß CI/CD Test Commands:"
	@echo "  ci-test                 Run CI/CD automated tests"
	@echo "  ci-quick                Quick CI test (no GitHub Issue)"
	@echo "  ci-full                 Full CI pipeline (with GitHub Issue)"
	@echo "  ci-comprehensive        Comprehensive controller tests"
	@echo "  ci-real-api             Real Gradio API tests"
	@echo "  test                    Run all tests"
	@echo ""
	@echo "üß† AI-Human BPMS Commands:"
	@echo "  ai-human-bpms           Start AI-Human BPMS assistant"
	@echo "  bpms-analyze            Analyze human cognitive capacity"
	@echo "  bpms-optimize           Optimize workflows"
	@echo "  cognitive-check         Check cognitive load"
	@echo ""
	@echo "üîó Integration System Commands:"
	@echo "  n8n-test                Test n8n API connection"
	@echo "  miibo-test              Test miibo API integration"
	@echo "  google-ecosystem-demo   Google Ecosystem integration demo"
	@echo "  safe-test               Safe integration tests (READ-ONLY)"
	@echo ""
	@echo "üéØ Lavelo AI Automation Commands:"
	@echo "  test-lavelo             Lavelo AI basic test"
	@echo "  test-supabase           Supabase connection test"
	@echo "  test-memory             Memory system test"
	@echo "  test-full               Full Lavelo AI test suite"
	@echo ""
	@echo "üìù GitHub Issue Management Commands:"
	@echo "  issues                  List issues"
	@echo "  create-issue            Create new issue (interactive)"
	@echo "  project-status          Check project status"
	@echo "  create-github-issue     Create AI-Human BPMS issue"
	@echo ""
	@echo "üêô Git & Collaboration Commands:"
	@echo "  gitflow-setup           Initialize GitFlow collaboration"
	@echo "  feature-start name=X    Start new feature development"
	@echo "  feature-finish name=X   Finish feature development"
	@echo "  collab-commit message=X Collaboration commit"
	@echo "  collab-status           Check collaboration status"
	@echo ""
	@echo "üöÄ GPT Engineer & System Generation Commands:"
	@echo "  generated_systems name=X Generate system with GPT Engineer"
	@echo "  gpt-setup               Setup GPT Engineer environment"
	@echo ""
	@echo "üéâ Most Used Commands (Recommended):"
	@echo "  make chrome-ext         # Start Chrome extension"
	@echo "  make app                # Start main application"
	@echo "  make wiki-rag           # Start WIKI RAG system"
	@echo "  make gui                # Start desktop GUI"
	@echo "  make ai-human-bpms      # Start AI-Human BPMS system"
	@echo ""
	@echo "üìñ Detailed Information:"
	@echo "  Run make <command-name> for detailed execution"
	@echo "  Example: make chrome-ext-status for detailed Chrome extension status"
	@echo ""
	@echo "ü§ñ AUTOCREATE Company - AI√óHuman Collaboration Development System"

# Replace main help command with new one
help: help-new
